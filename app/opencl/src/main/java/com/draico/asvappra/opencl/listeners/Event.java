package com.draico.asvappra.opencl.listeners;

import com.draico.asvappra.opencl.CommandQueue;
import com.draico.asvappra.opencl.Context;

public class Event {
    private int currentEvent;
    private CommandQueue currentCommandQueue;
    private Context currentContext;
    private boolean isEventCreatedManually;
    public boolean isSetStatusEvent;
    public static final int COMMAND_TYPE_NDRANGE_KERNEL = 0x11F0;
    public static final int COMMAND_TYPE_TASK = 0x11F1;
    public static final int COMMAND_TYPE_NATIVE_KERNEL = 0x11F2;
    public static final int COMMAND_TYPE_READ_BUFFER = 0x11F3;
    public static final int COMMAND_TYPE_WRITE_BUFFER = 0x11F4;
    public static final int COMMAND_TYPE_COPY_BUFFER = 0x11F5;
    public static final int COMMAND_TYPE_READ_IMAGE = 0x11F6;
    public static final int COMMAND_TYPE_WRITE_IMAGE = 0x11F7;
    public static final int COMMAND_TYPE_COPY_IMAGE = 0x11F8;
    public static final int COMMAND_TYPE_COPY_IMAGE_TO_BUFFER = 0x11F9;
    public static final int COMMAND_TYPE_COPY_BUFFER_TO_IMAGE = 0x11FA;
    public static final int COMMAND_TYPE_MAP_BUFFER = 0x11FB;
    public static final int COMMAND_TYPE_MAP_IMAGE = 0x11FC;
    public static final int COMMAND_TYPE_UNMAP_MEM_OBJECT = 0x11FD;
    public static final int COMMAND_TYPE_MARKER = 0x11FE;
    public static final int COMMAND_TYPE_ACQUIRE_GL_OBJECTS = 0x11FF;
    public static final int COMMAND_TYPE_RELEASE_GL_OBJECTS = 0x1200;
    public static final int COMMAND_TYPE_READ_BUFFER_RECT = 0x1201;
    public static final int COMMAND_TYPE_WRITE_BUFFER_RECT = 0x1202;
    public static final int COMMAND_TYPE_COPY_BUFFER_RECT = 0x1203;
    public static final int COMMAND_TYPE_USER = 0x1204;
    public static final int COMMAND_TYPE_BARRIER = 0x1205;
    public static final int COMMAND_TYPE_MIGRATE_MEM_OBJECTS = 0x1206;
    public static final int COMMAND_TYPE_FILL_BUFFER = 0x1207;
    public static final int COMMAND_TYPE_FILL_IMAGE = 0x1208;
    public static final int COMMAND_TYPE_SVM_FREE = 0x1209;
    public static final int COMMAND_TYPE_SVM_MEMCPY = 0x120A;
    public static final int COMMAND_TYPE_SVM_MEMFILL = 0x120B;
    public static final int COMMAND_TYPE_SVM_MAP = 0x120C;
    public static final int COMMAND_TYPE_SVM_UNMAP = 0x120D;
    public static final int COMMAND_EXECUTION_STATUS_COMPLETE = 0x0;
    public static final int COMMAND_EXECUTION_STATUS_RUNNING = 0x1;
    public static final int COMMAND_EXECUTION_STATUS_SUBMITTED = 0x2;
    public static final int COMMAND_EXECUTION_STATUS_QUEUED = 0x3;
    public static final int COMMAND_EXECUTION_STATUS_WAIT = -1;
    public static native Event createEvent(Context context, CommandQueue commandQueue);
    public native void setEventStatus(int executionStatus);
    public native void waitForEvents(Event[] listEvent);
    public native void setEventCallback(int executionStatus, CallbackEvent callbackEvent);
    public native Event markerWithWaitListEvent(CommandQueue commandQueue, Event[] waitListEvent);
    public native Event barrierWithWaitListEvent(CommandQueue commandQueue, Event[] waitListEvent);
    public native CommandQueue getCommandQueue();
    public native Context getContext();
    public native void releaseEvent();
    public native int getCommandType();
    public native int getExecutionStatus();
    public native int getReferenceCount();
    public native long getProfilingCommandQueue();
    public native long getProfilingCommandSubmit();
    public native long getProfilingCommantStart();
    public native long getProfilingCommandEnd();
    public native long getProfilingCommandComplete();
    public native String toString();
}
